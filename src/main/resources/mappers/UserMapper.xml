<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lqx.dao.user.UserMapper">

  <resultMap id="BaseResultMap" type="com.game.dao.user.model.User">
    <id column="id" jdbcType="INTEGER" property="id"/>
    <result column="nickname" jdbcType="LONGVARCHAR" property="nickname"/>
    <result column="sex" jdbcType="BIT" property="sex"/>
    <result column="email" jdbcType="LONGVARCHAR" property="email"/>
    <result column="phone" jdbcType="LONGVARCHAR" property="phone"/>
    <result column="token" jdbcType="LONGVARCHAR" property="token"/>
    <result column="register_ip" jdbcType="LONGVARCHAR" property="registerIp"/>
    <result column="register_date" jdbcType="TIMESTAMP" property="registerDate"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                      #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                      #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    `id`, `nickname`, `sex`, `email`, `phone`, `token`, `register_ip`, `register_date`
  </sql>
  <select id="selectByExample" parameterType="com.lqx.dao.user.model.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List"/>
    from `user`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from `user`
    where `id` = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from `user`
    where `id` = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lqx.dao.user.model.UserExample">
    delete from `user`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </delete>
  <insert id="insert" parameterType="com.game.dao.user.model.User">
    insert into `user` (
      `id`, 
      `nickname`, 
      `sex`, 
      `email`, 
      `phone`, 
      `token`, 
      `register_ip`, 
      `register_date`
    )
    values (
      #{id,jdbcType=INTEGER}, 
      #{nickname,jdbcType=LONGVARCHAR}, 
      #{sex,jdbcType=BIT}, 
      #{email,jdbcType=LONGVARCHAR}, 
      #{phone,jdbcType=LONGVARCHAR}, 
      #{token,jdbcType=LONGVARCHAR}, 
      #{registerIp,jdbcType=LONGVARCHAR}, 
      #{registerDate,jdbcType=TIMESTAMP}
    )
  </insert>
  <insert id="insertSelective" parameterType="com.game.dao.user.model.User">
    insert into `user`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        `id`,
      </if>
      <if test="nickname != null">
        `nickname`,
      </if>
      <if test="sex != null">
        `sex`,
      </if>
      <if test="email != null">
        `email`,
      </if>
      <if test="phone != null">
        `phone`,
      </if>
      <if test="token != null">
        `token`,
      </if>
      <if test="registerIp != null">
        `register_ip`,
      </if>
      <if test="registerDate != null">
        `register_date`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=LONGVARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=BIT},
      </if>
      <if test="email != null">
        #{email,jdbcType=LONGVARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=LONGVARCHAR},
      </if>
      <if test="token != null">
        #{token,jdbcType=LONGVARCHAR},
      </if>
      <if test="registerIp != null">
        #{registerIp,jdbcType=LONGVARCHAR},
      </if>
      <if test="registerDate != null">
        #{registerDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lqx.dao.user.model.UserExample" resultType="java.lang.Integer">
    select count(*) from `user`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update `user`
    <set>
        `id` = #{record.id,jdbcType=INTEGER},
        `nickname` = #{record.nickname,jdbcType=LONGVARCHAR},
        `sex` = #{record.sex,jdbcType=BIT},
        `email` = #{record.email,jdbcType=LONGVARCHAR},
        `phone` = #{record.phone,jdbcType=LONGVARCHAR},
        `token` = #{record.token,jdbcType=LONGVARCHAR},
        `register_ip` = #{record.registerIp,jdbcType=LONGVARCHAR},
        `register_date` = #{record.registerDate,jdbcType=TIMESTAMP},
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update `user`
    set `id` = #{record.id,jdbcType=INTEGER}, 
`nickname` = #{record.nickname,jdbcType=LONGVARCHAR}, 
`sex` = #{record.sex,jdbcType=BIT}, 
`email` = #{record.email,jdbcType=LONGVARCHAR}, 
`phone` = #{record.phone,jdbcType=LONGVARCHAR}, 
`token` = #{record.token,jdbcType=LONGVARCHAR}, 
`register_ip` = #{record.registerIp,jdbcType=LONGVARCHAR}, 
`register_date` = #{record.registerDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.game.dao.user.model.User">
    update `user`
    <set>
        <if test="id != null">
          `id` = #{id,jdbcType=INTEGER},
        </if>
        <if test="nickname != null">
          `nickname` = #{nickname,jdbcType=LONGVARCHAR},
        </if>
        <if test="sex != null">
          `sex` = #{sex,jdbcType=BIT},
        </if>
        <if test="email != null">
          `email` = #{email,jdbcType=LONGVARCHAR},
        </if>
        <if test="phone != null">
          `phone` = #{phone,jdbcType=LONGVARCHAR},
        </if>
        <if test="token != null">
          `token` = #{token,jdbcType=LONGVARCHAR},
        </if>
        <if test="registerIp != null">
          `register_ip` = #{registerIp,jdbcType=LONGVARCHAR},
        </if>
        <if test="registerDate != null">
          `register_date` = #{registerDate,jdbcType=TIMESTAMP},
        </if>
    </set>
    where `id` = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.game.dao.user.model.User">
    update `user`
    set
        `id` = #{id,jdbcType=INTEGER}, 
        `nickname` = #{nickname,jdbcType=LONGVARCHAR}, 
        `sex` = #{sex,jdbcType=BIT}, 
        `email` = #{email,jdbcType=LONGVARCHAR}, 
        `phone` = #{phone,jdbcType=LONGVARCHAR}, 
        `token` = #{token,jdbcType=LONGVARCHAR}, 
        `register_ip` = #{registerIp,jdbcType=LONGVARCHAR}, 
        `register_date` = #{registerDate,jdbcType=TIMESTAMP}
    where `id` = #{id,jdbcType=INTEGER}
  </update>
</mapper>